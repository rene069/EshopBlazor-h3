@using Microsoft.AspNetCore.Components.WebAssembly.Hosting
@inject IProduktServices _ProduktServices

<h3>ProduktFormComponent</h3>


<EditForm Model="produkt" OnValidSubmit="HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div class="form-outline mb-4">
        <InputText @bind-Value="produkt.ProduktName" id="Produktname" class="form-control" />
        <label class="form-label" for="Produktname">Produktname</label>
    </div>

    <div class="form-outline mb-4">
        <InputText id="Description" @bind-Value="produkt.Description" class="form-control" />
        <label class="form-label" for="Description">Description</label>
    </div>


    <div class="form-outline mb-4">
        <InputNumber id="Price" @bind-Value="produkt.Price" class="form-control" />
        <label class="form-label" for="Price">Price</label>

    </div>

    <div class="form-outline mb-4">
        <InputFile accept="image/png,image/jpeg,image/jpg" OnChange="OnInputFileChange" id="Image" class="form-control" />
        <label class="form-label" for="Image">Image</label>
    </div>


    <div class="form-outline mb-4">

        <select @bind="produkt.BrandId" class="form-select" id="Brand">
            <option value=""></option>
            @foreach (var item in Brands)
            {
                <option value="@item.BrandId">@item.BrandName</option>
            }
        </select>
        <label class="form-label" for="Brand">Brand</label>
    </div>


    <div class="form-outline mb-4">

        <select @bind="produkt.TypesId" class="form-select" id="Types">
            <option value=""></option>
            @foreach (var item in Types)
            {
                <option value="@item.TypesId">@item.TypeName</option>
            }
        </select>
        <label class="form-label" for="Types">Types</label>
    </div>

    <!-- Submit button -->
    <button type="submit" class="btn btn-primary btn-block mb-3">Create</button>
</EditForm>


@code {
    public ProduktDTO produkt { get; set; } = new();

    public List<BrandDTO> Brands { get; set; } = new();
    public List<TypesDTO> Types { get; set; } = new();

    long maxAllowedSize = 2000000000;
    public IBrowserFile Upload { get; set; }

    [Parameter] public int Id { get; set; } = 0;

    [Parameter] public EventCallback<ProduktDTO> ValidSubmit { get; set; }
    protected override async Task OnInitializedAsync()
    {
        if (Id != 0)
        {
            produkt = await _ProduktServices.GetProduktByIdAsync(Id);
        }
        Brands = await _ProduktServices.GetBrandAsync();
        Types = await _ProduktServices.GetTypesAsync();
        await base.OnInitializedAsync();
    }

    private void OnInputFileChange(InputFileChangeEventArgs e)
    {
        Upload = e.File;
        this.StateHasChanged();
    }

    public async Task HandleValidSubmit()
    {

        if (Upload != null)
        {
            var path = $"wwwroot\\{Upload.Name}";
            using (Stream stream = Upload.OpenReadStream(maxAllowedSize))
            {
                FileStream fs = File.Create(path);
                await stream.CopyToAsync(fs);
                stream.Close();
                fs.Close();


            }

            produkt.ImageURL = path;
        }
        
        await ValidSubmit.InvokeAsync(produkt);
    }
}

    @*C:\Users\renep\Source\Repos\rene069\EshopBlazor-h3\EshopBlazorProject---H3\wwwroot\Images*@